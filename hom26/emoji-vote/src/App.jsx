import React, { useMemo, useState, useCallback } from 'react';
import EmojiVote from './EmojiVote';

const EmojiVoting = () => {
    const emojis = useMemo(() => ['üòÄ', 'üòä', 'üòé', 'üòç', 'üò¢'], []);

    const [votes, setVotes] = useState(
        emojis.reduce((acc, emoji) => ({ ...acc, [emoji]: 0 }), {})
    );

    const handleVote = useCallback((emoji) => {
        setVotes((prevVotes) => ({
            ...prevVotes,
            [emoji]: prevVotes[emoji] + 1,
        }));
    }, []);

    return (
        <div style={{
            display: 'flex',
            flexDirection: 'column',
            justifyContent: 'center',
            alignItems: 'center',
            height: '100vh', // –¶–µ–Ω—Ç—Ä—É—î–º–æ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ
            textAlign: 'center',
        }}>
            <h1>–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –∑–∞ —Å–º–∞–π–ª–∏–∫</h1>

            {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–º–∞–π–ª–∏–∫—ñ–≤ */}
            <div style={{
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                gap: '20px',
                padding: '20px',
            }}>
                {emojis.map((emoji) => (
                    <EmojiVote key={emoji} emoji={emoji} onVote={handleVote} votes={votes[emoji]} />
                ))}
            </div>

            {/* –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ */}
            <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è:</h2>
            <ul style={{ listStyle: 'none', padding: 0 }}>
                {emojis.map((emoji) => (
                    <li key={emoji}>
                        {emoji}: {votes[emoji]} –≥–æ–ª–æ—Å—ñ–≤
                    </li>
                ))}
            </ul>
        </div>
    );
};

export default EmojiVoting;
